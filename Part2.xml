<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>// Place global declarations here.
int x1;
int x2;

int  CPU1_C;
chan CPU1_use, CPU1_done;
int  CPU2_C;
chan CPU2_use, CPU2_done;

int JOBA_C1 = 3;
int JOBA_C2 = 4;
int JOBB_C1 = 3;
int JOBB_C2 = 2;
int JOBC_C1 = 6;
int JOBC_C2 = 5;
int JOBD_C1 = 3;
int JOBD_C2 = 3;
int JOBE_C1 = 2;
int JOBE_C2 = 1;

int JOB_A_DEP1 = 0;
int JOB_A_DEP2 = 0;
int JOB_B_DEP1 = 0;
int JOB_B_DEP2 = 0;
int JOB_C_DEP1 = 1;
int JOB_C_DEP2 = 2;
int JOB_D_DEP1 = 2;
int JOB_D_DEP2 = 0;
int JOB_E_DEP1 = 4;
int JOB_E_DEP2 = 0;

// integer counter "done_counter" and a global clock "y" to
int done_counter;
clock y = 0.0;

int finished[5] = {0, 0, 0, 0, 0};</declaration>
	<template>
		<name>Job</name>
		<parameter>int &amp;C1, int &amp;C2, int &amp;dep1, int &amp;dep2, int jobindex</parameter>
		<location id="id0" x="-518" y="-518">
			<name x="-527" y="-552">wait</name>
		</location>
		<location id="id1" x="-680" y="-238">
			<name x="-756" y="-272">cpu1_use</name>
		</location>
		<location id="id2" x="-357" y="-238">
			<name x="-340" y="-263">cpu2_use</name>
		</location>
		<location id="id3" x="-518" y="-178">
			<name x="-544" y="-170">job_done</name>
			<urgent/>
		</location>
		<location id="id4" x="-518" y="-323">
			<name x="-586" y="-357">job_finalising</name>
			<urgent/>
		</location>
		<location id="id5" x="-518" y="-425">
			<name x="-561" y="-459">job_finished</name>
		</location>
		<init ref="id0"/>
		<transition id="id6">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-1113" y="-425">(dep1 == 0 || (dep1 &gt; 0 &amp;&amp; finished[dep1-1] == 1)) &amp;&amp;
(dep2 == 0 || (dep2 &gt; 0 &amp;&amp; finished[dep2-1] == 1)) &amp;&amp;
finished[jobindex] == 0 &amp;&amp;
CPU1_C==0</label>
			<label kind="synchronisation" x="-756" y="-348">CPU1_use!</label>
			<label kind="assignment" x="-756" y="-331">CPU1_C=C1</label>
			<nail x="-680" y="-425"/>
		</transition>
		<transition id="id7">
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="guard" x="-357" y="-425">(dep1 == 0 || (dep1 &gt; 0 &amp;&amp; finished[dep1-1] == 1)) &amp;&amp;
(dep2 == 0 || (dep2 &gt; 0 &amp;&amp; finished[dep2-1] == 1)) &amp;&amp;
finished[jobindex] == 0 &amp;&amp;
CPU2_C==0</label>
			<label kind="synchronisation" x="-357" y="-348">CPU2_use!</label>
			<label kind="assignment" x="-357" y="-331">CPU2_C=C2</label>
			<nail x="-357" y="-425"/>
			<nail x="-357" y="-331"/>
		</transition>
		<transition id="id8">
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="assignment" x="-569" y="-374">done_counter++</label>
		</transition>
		<transition id="id9">
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="assignment" x="-603" y="-289">finished[jobindex] := 1</label>
			<nail x="-518" y="-297"/>
		</transition>
		<transition id="id10">
			<source ref="id1"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-697" y="-212">CPU1_done?</label>
			<label kind="assignment" x="-680" y="-195">CPU1_C=0</label>
		</transition>
		<transition id="id11">
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-433" y="-212">CPU2_done?</label>
			<label kind="assignment" x="-433" y="-195">CPU2_C=0</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Cpu</name>
		<parameter>chan &amp;use, chan &amp;done, int &amp;C</parameter>
		<declaration>// Place local declarations here.
clock x;</declaration>
		<location id="id12" x="-272" y="-212">
			<name x="-289" y="-246">idle</name>
		</location>
		<location id="id13" x="-272" y="-25">
			<name x="-289" y="-59">inUse</name>
			<label kind="invariant" x="-282" y="-8">x&lt;=C</label>
		</location>
		<init ref="id12"/>
		<transition id="id14">
			<source ref="id13"/>
			<target ref="id12"/>
			<label kind="guard" x="-416" y="-136">x==C</label>
			<label kind="synchronisation" x="-416" y="-119">done!</label>
			<nail x="-374" y="-25"/>
			<nail x="-374" y="-212"/>
		</transition>
		<transition id="id15">
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-170" y="-136">use?</label>
			<label kind="assignment" x="-170" y="-119">x:=0</label>
			<nail x="-178" y="-212"/>
			<nail x="-178" y="-25"/>
		</transition>
	</template>
	<system>// Place template instantiations here
CPU1 = Cpu(CPU1_use, CPU1_done, CPU1_C);
CPU2 = Cpu(CPU2_use, CPU2_done, CPU2_C);

JobA = Job(JOBA_C1, JOBA_C2, JOB_A_DEP1, JOB_A_DEP2,0);
JobB = Job(JOBB_C1, JOBB_C2, JOB_B_DEP1, JOB_B_DEP2,1);
JobC = Job(JOBC_C1, JOBC_C2, JOB_C_DEP1, JOB_C_DEP2,2);
JobD = Job(JOBD_C1, JOBD_C2, JOB_D_DEP1, JOB_D_DEP2,3);
JobE = Job(JOBE_C1, JOBE_C2, JOB_E_DEP1, JOB_E_DEP2,4);

// List one or more processes to be composed into a system.
// system Process;
system JobA, JobB, JobC, JobD, JobE, CPU1, CPU2;
</system>
	<queries>
		<query>
			<formula>E&lt;&gt; JobA.job_finished and JobB.job_finished and JobC.job_finished and JobD.job_finished and JobE.job_finished
</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-12-15 16:14:15 +0100">
			</result>
		</query>
		<query>
			<formula>E&lt;&gt; done_counter == 5 and y &gt;= 8</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-12-16 11:07:27 +0100">
			</result>
		</query>
		<query>
			<formula/>
			<comment/>
		</query>
	</queries>
</nta>
